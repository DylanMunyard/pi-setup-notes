---
apiVersion: v1
kind: Namespace
metadata:
  name: teamcity-server
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: teamcity-server
  namespace: teamcity-server
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: teamcity-server-data
  namespace: teamcity-server
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: teamcity-server-logs
  namespace: teamcity-server
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teamcity-server
  namespace: teamcity-server
spec:
  selector:
    matchLabels:
      app: teamcity-server
  replicas: 1
  template:
    metadata:
      labels:
        app: teamcity-server
    spec:
      serviceAccountName: teamcity-server
      containers:
        - name: teamcity-server
          image: dylanmunyard/teamcity-server:arm.01
          imagePullPolicy: Always
          volumeMounts:
            - name: teamcity-server-data
              mountPath: "/data/teamcity_server/datadir"
            - name: teamcity-server-logs
              mountPath: "/opt/teamcity/logs"
      volumes:
        - name: teamcity-server-data
          persistentVolumeClaim:
            claimName: teamcity-server-data
        - name: teamcity-server-logs
          persistentVolumeClaim:
            claimName: teamcity-server-logs
      nodeSelector:
        pi.attached.storage/exists: "true"
        